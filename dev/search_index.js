var documenterSearchIndex = {"docs":
[{"location":"","page":"MakieThemeing","title":"MakieThemeing","text":"MakieThemeing","category":"page"},{"location":"#MakieThemeing","page":"MakieThemeing","title":"MakieThemeing","text":"MakieThemeing.jl\n\nTheming and convenience tools for plotting with Makie.jl developed to be particularly helpful in academic work, in particular for making figures for papers. You are more than welcomed to use this to benefit from the color themes, or the convenience functions within. Feel free to contribute PRs adding your own themes or more convenience functions.\n\nThe color themes in this repo are all composed of 6 colors. They have been created through extensive testing, so that their colors are most distinguishable with each other, visually aesthetic and thematic, are most distinguishable across all three major classes of color blindness, and are distinguishable also in greyscale (brightness). In our experience, all color schemes here are more distinguishable from Makie's default color scheme, and more aesthetically pleasing as well.\n\nBesides themeing, this package also provides several convenience functions for accelerating writing code for a \"paper figure\". Highlight is the axesgrid, figuretitle! and label_axes! functions.\n\nfor all other information, see the online docs:\n\n\n\n\n\n","category":"module"},{"location":"","page":"MakieThemeing","title":"MakieThemeing","text":"","category":"page"},{"location":"#Usage","page":"MakieThemeing","title":"Usage","text":"","category":"section"},{"location":"","page":"MakieThemeing","title":"MakieThemeing","text":"Simply add the repo via Pkg.add. When using MakieThemeing, a default theme is applied that changes most theme aspects, and in particular the cycling of colors, markers, and lines.","category":"page"},{"location":"","page":"MakieThemeing","title":"MakieThemeing","text":"Color themeing can be controlled in two ways. One, is by setting environment three environment variables before using the module:","category":"page"},{"location":"","page":"MakieThemeing","title":"MakieThemeing","text":"ENV[\"COLORSCHEME\"] = \"JuliaDynamics\" # or others, see docs\nENV[\"BGCOLOR\"] = :transparent        # anything for `backgroundcolor` of Makie\nENV[\"AXISCOLOR\"] = :black            # color of all axis elements (labels, spines, ticks)\n\nusing MakieThemeing\n\nMakie.update_theme!(;\n    # size = (figwidth, figheight),\n)","category":"page"},{"location":"","page":"MakieThemeing","title":"MakieThemeing","text":"The second way is to do","category":"page"},{"location":"","page":"MakieThemeing","title":"MakieThemeing","text":"using MakieThemeing\ntheme = MakieThemeing.make_theme(colorcycle, bgcolor, axiscolor)\nMakie.set_theme!(theme)","category":"page"},{"location":"","page":"MakieThemeing","title":"MakieThemeing","text":"And make_theme can also be called without arguments, in which case it uses the same environmental parameters.","category":"page"},{"location":"#Axes-grid","page":"MakieThemeing","title":"Axes grid","text":"","category":"section"},{"location":"","page":"MakieThemeing","title":"MakieThemeing","text":"axesgrid","category":"page"},{"location":"#MakieThemeing.axesgrid","page":"MakieThemeing","title":"MakieThemeing.axesgrid","text":"axesgrid(m, n; kwargs...) -> fig, axs\n\nCreate a grid of m rows and n columns of axes in a new figure and return the figure and the Matrix of axis.\n\nKeyword arguments\n\nsharex/sharey = false: make every row share the y axis and/or every column share the x axis. In this case, tick labels are hidden from the shared axes.\ntitles::Vector{String}: if given, they are used as titles for the axes of the top row. Can also be a single String, in which case it is used for all axes.\nxlabels::Vector{String}: if given, they are used as x labels of the axes in the bottom row. Can also be a single String, in which case it is used for all axes.\nylabels::Vector{String}: if given, they are used as y labels of the axes in the leftmost column. Can also be a single String, in which case it is used for all axes.\ntitle::String: if given, it is used as super-title for the entire figure using the figuretitle! function.\nkwargs...: all further keywords are propagated to Figure.\n\n\n\n\n\n","category":"function"},{"location":"#Labelling-functions","page":"MakieThemeing","title":"Labelling functions","text":"","category":"section"},{"location":"","page":"MakieThemeing","title":"MakieThemeing","text":"figuretitle!\nlabel_axes!\nspace_out_legend!\ntextbox!","category":"page"},{"location":"#MakieThemeing.figuretitle!","page":"MakieThemeing","title":"MakieThemeing.figuretitle!","text":"figuretitle!(fig, title; kwargs...)\n\nAdd a title to a Figure, that looks the same as the title of an Axis by using the same default font. kwargs are propagated to Label.\n\n\n\n\n\n","category":"function"},{"location":"#MakieThemeing.label_axes!","page":"MakieThemeing","title":"MakieThemeing.label_axes!","text":"label_axes!(axs::Array{Axis};\n    valign = :top, halign = :right, pad = 5,\n    labels = range('a'; step = 1, length = length(axs)),\n    add_box = false, boxkw = NamedTuple(), kw...\n)\n\nAdd labels (like a,b,c,...) to all axes. Keywords customly adjust location, and kw are propagated to Label. If chosen, a box is added around the label with options boxkw propagated to Box.\n\n\n\n\n\n","category":"function"},{"location":"#MakieThemeing.space_out_legend!","page":"MakieThemeing","title":"MakieThemeing.space_out_legend!","text":"space_out_legend!(legend)\n\nSpace out the contents of a given legend, so that the banks are spaced equidistantly and cover the full width available for the legend. This function is supposed to be called for horizontal legends that should span the full width of a column and hence are placed either on top or below an axis.\n\n\n\n\n\n","category":"function"},{"location":"#MakieThemeing.textbox!","page":"MakieThemeing","title":"MakieThemeing.textbox!","text":"textbox!(ax::Axis, text::AbstractString; kw...)\n\nAdd a small textbox to ax containing the given text. By default, the textbox is placed at the top right corner with proper alignment, and it is slightly transparent. See the source code for the keywords you need to adjust for different placement or styling.\n\n\n\n\n\n","category":"function"},{"location":"#Color-manipulation","page":"MakieThemeing","title":"Color manipulation","text":"","category":"section"},{"location":"","page":"MakieThemeing","title":"MakieThemeing","text":"lighten\ninvert_luminance","category":"page"},{"location":"#MakieThemeing.lighten","page":"MakieThemeing","title":"MakieThemeing.lighten","text":"lighten(c, f = 1.2)\n\nLighten given color c by multiplying its luminance with f. If f is less than 1, the color is darkened.\n\n\n\n\n\n","category":"function"},{"location":"#MakieThemeing.invert_luminance","page":"MakieThemeing","title":"MakieThemeing.invert_luminance","text":"invert_luminance(color)\n\nReturn a color with same hue and saturation but luminance inverted.\n\n\n\n\n\n","category":"function"},{"location":"#Color-schemes","page":"MakieThemeing","title":"Color schemes","text":"","category":"section"},{"location":"","page":"MakieThemeing","title":"MakieThemeing","text":"using CairoMakie, MakieThemeing\n\ntestcolorscheme(\"JuliaDynamics\")","category":"page"},{"location":"","page":"MakieThemeing","title":"MakieThemeing","text":"testcolorscheme(\"JuliaDynamicsLight\")","category":"page"},{"location":"","page":"MakieThemeing","title":"MakieThemeing","text":"testcolorscheme(\"Petrol\")","category":"page"},{"location":"","page":"MakieThemeing","title":"MakieThemeing","text":"testcolorscheme(\"CloudySky\")","category":"page"},{"location":"","page":"MakieThemeing","title":"MakieThemeing","text":"testcolorscheme(\"Flames\")","category":"page"},{"location":"","page":"MakieThemeing","title":"MakieThemeing","text":"testcolorscheme(\"GreenMetal\")","category":"page"},{"location":"#Other-themeing","page":"MakieThemeing","title":"Other themeing","text":"","category":"section"},{"location":"","page":"MakieThemeing","title":"MakieThemeing","text":"Marker and linestyle cycles are added into themeing. The following constants are exported. The type CyclicContainer is a Vector-like that implements modulo indexing, wrapping around the indices after the length of the contained elements has been exhausted.","category":"page"},{"location":"","page":"MakieThemeing","title":"MakieThemeing","text":"COLORS","category":"page"},{"location":"","page":"MakieThemeing","title":"MakieThemeing","text":"MARKERS","category":"page"},{"location":"","page":"MakieThemeing","title":"MakieThemeing","text":"LINESTYLES","category":"page"},{"location":"#Image-file-manipulation","page":"MakieThemeing","title":"Image file manipulation","text":"","category":"section"},{"location":"","page":"MakieThemeing","title":"MakieThemeing","text":"Besides the functions below, MakieThemeing also overloads DrWatson._wsave, so that wsave works for Figure. By default it increments px_per_unit = 2.","category":"page"},{"location":"","page":"MakieThemeing","title":"MakieThemeing","text":"negate_remove_bg\nremove_bg","category":"page"},{"location":"#MakieThemeing.negate_remove_bg","page":"MakieThemeing","title":"MakieThemeing.negate_remove_bg","text":"negate_remove_bg(file; threshold = 0.02, bg = :white, overwrite = false)\n\nCreate an negated (or color inverted) version of the image at file with background removed, so that it may be used in environments with dark background. The threshold decides when a pixel should be made transparent. If the image already has a dark background, pass bg = :black instead, which will not negate the image but still remove the background.\n\n\n\n\n\n","category":"function"},{"location":"#MakieThemeing.remove_bg","page":"MakieThemeing","title":"MakieThemeing.remove_bg","text":"remove_bg(file; threshold = 0.02, overwrite = false)\n\nRemove the background for figure in file (all pixels with luminosity > 1 - threshold). Either overwrite original file or make a copy with suffix _bgr.\n\n\n\n\n\n","category":"function"}]
}
